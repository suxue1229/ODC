@using ODCenter.Base
@model IEnumerable<ODCenter.Models.SensorInfo>

@{
    Layout = "~/Views/Shared/_LayoutClean.cshtml";
    ViewBag.Title = "仪表管理";
    Guid? institute = ViewData["institute"] as Guid?;
}

@Html.Partial("_AdminPartial", ViewData["sensor"] = "active")
<p style="padding-top:10px;">
    @if (institute.HasValue)
    {
        <a class="btn btn-default" href="@Url.Action("Create", new { id = institute.Value.ToString("N") })">创建仪表</a>
        <a class="btn btn-default" href="@Url.Action("Index", new { id = "" })">显示全部</a>
        <a class="btn btn-default" href="@Url.Action("Import", new { id = institute.Value.ToString("N") })">批量导入</a>
    }
    else
    {
        <a class="btn btn-default" href="@Url.Action("Index", new { id = "" })">刷新</a>
    }
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Institute)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Device)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SenType)
        </th>
        <th>
            数据源
        </th>
        <th>
            OPC
        </th>
        <th>
            数据处理
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Unit)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Order)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Important)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Enabled)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Modifier)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.OrderBy(x => x.Name))
    {
        if ((!institute.HasValue) || (institute.HasValue && item.Institute == institute.Value))
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @if (DbProvider.Institutes.ContainsKey(item.Institute.ToString("N")))
                    {
                        @DbProvider.Institutes[item.Institute.ToString("N")].Name
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.Institute)
                    }
                </td>
                <td>
                    @if (item.Device.HasValue)
                    {
                        @DbProvider.Devices[item.Device.Value.ToString("N")].Name
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.Device)
                    }
                </td>
                <td>
                    @item.SenType.Description()

                </td>
                <td>
                    <span title="数据来源: @item.DatSource.Description() &#10;数据类型: @item.DatType.Description()&#10;刷新间隔: @item.Interval &#10;精度控制: @item.Precise &#10;信号反转: @item.Inverse">@item.DatSource.Description()</span>
                </td>
                <td>
                    <span class='glyphicon glyphicon-md glyphicon-transfer' title="主机: @item.OPCHost &#10;服务器: @item.OPCServer &#10;数据项: @item.OPCItem" style="color:@(String.IsNullOrWhiteSpace(item.OPCServer) || String.IsNullOrWhiteSpace(item.OPCItem)?"red":"green");"></span>
                </td>
                <td>
                    <span title="数值下限: @item.Minimum &#10;数值上限: @item.Maximum &#10;增益: @item.Gain &#10;偏移: @item.Offset">
                        @((item.Maximum == 0 && item.Minimum == 0 && item.Gain == 1 && item.Offset == 0) ? "默认" : "自定义")
                    </span>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Unit)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Order)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Important)
                </td>
                <td>
                    @ExtMvc.IconStatus(item.Enabled)
                </td>
                <td>
                    <span class="glyphicon glyphicon-md glyphicon-user" title="@item.Modifier"></span>
                </td>
                <td>
                    @if (item.Enabled)
                    {
                        <a class="btn btn-manage" href="@Url.Action("Copy", new { id = item.Id.ToString("N") })" title="复制"><span class="fa fa-copy"></span></a>
                        <a class="btn btn-manage" href="@Url.Action("Edit", new { id = item.Id.ToString("N") })" title="编辑"><span class="fa fa-edit"></span></a>
                        <a class="btn btn-manage" href="@Url.Action("Details", new { id = item.Id.ToString("N") })" title="详细信息"><span class="fa fa-info-circle"></span></a>
                        <a class="btn btn-manage" href="@Url.Action("Delete", new { id = item.Id.ToString("N") })" title="删除"><span class="fa fa-trash-o"></span></a>
                    }
                </td>

            </tr>
        }
    }
</table>
